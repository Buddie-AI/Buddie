cis
############
    cis是LE AUDIO基于连接方式的一种音频传输协议，支持单向和双向通讯，支持自定义数据(ACL)和音频数据(CIS)双链路传输，设备连接数量 **最多为2台**。

参数说明
********
    cis的参数都在可视化配置工具 **LE_AUDIO配置** 的 **公共配置** 和 **CIS配置** 中进行配置。其中 **公共配置** 说明可参考 **le audio公共配置** 章节。而 **CIS配置** 说明请参考下表。

    ===============     =====================================================
    名称                 描述
    ===============     =====================================================
    主机使能             主机决定蓝牙传输参数，一般作为TX端，两发一收例外
    从机使能             从机一般作为RX端，两发一收情况作为TX端
    主机关闭EDR          作为主机的设备开启CIS后默认关闭经典蓝牙可发现可连接
    从机关闭EDR          作为从机的设备开启CIS后默认关闭经典蓝牙可发现可连接
    按键同步             主机或从机按下按键后，同步把按键事件发给对方
    连接角色             配置设备作为主机还是从机，前提需要打开主从机使能
    连接方式             cis支持两发一收、一发一收、一发两收传输方式
    音频传输方式         cis支持单向和双向传输方式
    发包间隔             蓝牙发数间隔，必须为帧持续时间的整数倍
    主到从重发次数       主机向从机发数的重发次数
    从到主重发次数       从机向主机发数的重发次数
    主到从预发包         主机向从机发数的提前量，改大后整体延时多出(n-1)*发包间隔
    从到主预发包         从机向主机发数的提前量，改大后整体延时多出(n-1)*发包间隔
    码率                 编解码器码率参数，TX和RX需保持一致
    发送延时             对于实时数据流生效，一般直接使用默认值
    ===============     =====================================================

    .. note:: 可视化工具的部分参数是分模式的，开发者修改参数时需要找到对应模式的参数项修改。

代码流程
********
    由于cis需要依赖蓝牙功能，因此在使用cis传输前需要先初始化蓝牙。对于跑蓝牙后台的情况，开机先进入蓝牙模式，当蓝牙初始化完成后，即出现事件 **BT_STATUS_INIT_OK** 后便可以初始化和开启cis功能，切换模式由于蓝牙仍然保持工作，因此切到别的模式后不需要重新初始化蓝牙便可直接打开cis功能。

    .. image:: imgs/蓝牙模式蓝牙初始化.png
        :height: 500px
        :width: 1000px


    而对于不跑蓝牙后台的情况，系统进入别的音频模式后，需要手动调用 **btstack_init_in_other_mode** 函数来初始化蓝牙，当出现事件 **BT_STATUS_INIT_OK** 后才可以初始化和开启cis功能。推出当前模式时也需要先关闭cis功能后再调用 **btstack_exit_in_other_mode** 来推出蓝牙。

    .. image:: imgs/非后台蓝牙初始化和退出.png
        :height: 500px
        :width: 1000px

    .. image:: imgs/非后台蓝牙初始化成功.png
        :height: 500px
        :width: 1000px


    由于各个模式的本地播放和LE AUDIO转发的音频流程是完全不同的，因此需要在本地播放和LE AUDIO转发切换的同时切换音频流程。每个模式的切换操作各不相同，所以不同的模式要使用不同的切换接口。代码上模式使用隐式调用和回调函数的方式来实现不同模式的不同切换动作。

    .. image:: imgs/音频切换接口.png
        :height: 500px
        :width: 1000px

    上图的这些切换接口是通过对结构体指针进行赋值，然后调用结构体里面的函数指针来实现间接调用的。

    .. image:: imgs/ops结构体赋值2.png
        :height: 500px
        :width: 1000px

    .. image:: imgs/ops调用实例.png
        :height: 500px
        :width: 1000px                    


    另外，由于不同模式的音源打开方式不同、本地播放和LE AUDIO转发切换接口的不同、参数不同等原因。当le audio运行期间，每次在切换模式都需要重新开关一下le audio，以便更新不同接口和参数。

    .. image:: imgs/le_audio模式切换.png
        :height: 500px
        :width: 1000px


自定义数据转发
**************
    cis提供了一套TX和RX双向发送自定义数据的机制。基于这套机制，可实现TX和RX互发数据、同步执行事件等功能。
    
数据转发
--------
    要使用数据转发功能要实现三部分代码，分别是数据发送接口、数据接收接口和注册数据接收结构。使用实例如下。

    .. warning:: 下图结构体的 **.task_name** 如果没有赋值，则回调函数会在蓝牙任务中运行，当回调接口中的流程处理时间太长，将会阻塞蓝牙任务，建议都对 **.task_name** 进行赋值。

    .. image:: imgs/cis自定义数据实例.png
        :height: 500px
        :width: 1000px

同步事件执行
------------
    同步事件执行是指TX和RX双方由某一方发起并约定在多久之后一起执行某个动作。该功能与数据转发类似，是在数据转发基础上添加定时机制，因此在使用上也要实现发起同步事件接口、同步事件接收接口和注册同步事件接收结构三部分的代码。使用实例如下。

    .. warning:: 下图结构体的 **.task_name** 如果没有赋值，则回调函数会在蓝牙任务中运行，当回调接口中的流程处理时间太长，将会阻塞蓝牙任务，建议都对 **.task_name** 进行赋值。

    .. image:: imgs/cis同步事件执行实例.png
        :height: 500px
        :width: 1000px

按键事件同步
------------
    按键事件同步功能在SDK上已经由完整的流程，用户不需要另外再添加流程和接口。只需打开TX和RX端的宏LEA_CIG_KEY_EVENT_SYNC和CONNECTED_KEY_EVENT_SYNC便可以实现按键事件同步。



相关接口
********
