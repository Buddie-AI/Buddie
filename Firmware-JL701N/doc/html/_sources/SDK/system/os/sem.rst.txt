信号量
=================

信号量(Semaphore)相当于一盏具有计数器的信号灯，线程只有获取了计数为非0的信号灯才能往下执行，一般处理具有先后次序的逻辑问题。当两个具有协作关系时，某个线程完成某一动作后，另外一个线程再进行某些动作，信号量(Semaphore)作为同步信号完成上述线程的 **同步** 逻辑。


os_sem_create
~~~~~~~~~~~~~~~~~~~~

- 函数原型：

    .. code-block:: c

        int os_sem_create(OS_SEM *sem, int count);

- 功能说明：创建信号量;
- 参数说明：

    =========================  ============================================================================================
      参数                      说明
        sem                     信号量句柄
        count                   信号量初始计数值
    =========================  ============================================================================================

- 返回值：

    =========================  ============================================================================================
        0                       信号量创建成功
        非0                     信号量创建失败
    =========================  ============================================================================================


- 示例：

    .. code-block:: c
        :linenos:

        OS_SEM sem;
        static void my_task(void *p)
        {
            int err;
            os_sem_create(&sem, 0);

            while (1) {
                ... ...
            }
        }


os_sem_pend
~~~~~~~~~~~~~~~~~~~~

- 函数原型：

    .. code-block:: c

        int os_sem_pend(OS_SEM *sem, int timeout);

- 功能说明：获取信号量;
- 参数说明：

    =========================  ============================================================================================
      参数                      说明
        sem                     信号量句柄
        timeout                 超时时间
    =========================  ============================================================================================

- 返回值：

    =========================  ============================================================================================
        0                       信号量获取成功
        非0                     信号量获取失败
    =========================  ============================================================================================


- 示例：

    .. code-block:: c
        :linenos:

        OS_SEM sem;
        static void my_task(void *p)
        {
            int err;

            while (1) {
                os_sem_pend(&sem, 0);
                //TODO: sem pend succ
            }
        }

os_sem_accept
~~~~~~~~~~~~~~~~~~~~

- 函数原型：

    .. code-block:: c

        int os_sem_accept(OS_SEM *sem);

- 功能说明：非阻塞式获取信号量;
- 参数说明：

    =========================  ============================================================================================
      参数                      说明
        sem                     信号量句柄
    =========================  ============================================================================================

- 返回值：

    =========================  ============================================================================================
        0                       信号量获取成功
        非0                     信号量获取失败
    =========================  ============================================================================================


- 示例：

    .. code-block:: c
        :linenos:

        OS_SEM sem;
        static void my_task(void *p)
        {
            int err;

            while (1) {
                os_sem_accept(&sem, 0);
                ... ...
            }
        }


os_sem_post
~~~~~~~~~~~~~~~~~~~~

- 函数原型：

    .. code-block:: c

        int os_sem_post(OS_SEM *);

- 功能说明：发送信号量;
- 参数说明：

    =========================  ============================================================================================
      参数                      说明
        sem                     信号量句柄
    =========================  ============================================================================================

- 返回值：

    =========================  ============================================================================================
        0                       信号量发送成功
        非0                     信号量发送失败
    =========================  ============================================================================================


- 示例：

    .. code-block:: c
        :linenos:

        OS_SEM sem;
        static void my_task(void *p)
        {
            int err;

            while (1) {
                ... ...
                os_sem_post(&sem);
                ... ...
            }
        }



os_sem_del
~~~~~~~~~~~~~~~~~~~~

- 函数原型：

    .. code-block:: c

        int os_sem_del(OS_SEM *sem, int block);

- 功能说明：发送信号量;
- 参数说明：

    =========================  ============================================================================================
      参数                      说明
        sem                     信号量句柄
        block                   保留
    =========================  ============================================================================================

- 返回值：

    =========================  ============================================================================================
        0                       信号量发送成功
        非0                     信号量发送失败
    =========================  ============================================================================================


- 示例：

    .. code-block:: c
        :linenos:

        OS_SEM sem;
        static void my_task(void *p)
        {
            int err;

            while (1) {
                ... ...
                os_sem_del(&sem, 0);
                ... ...
            }
        }




