# 串口写卡使用指引

|Version|Date|Notes|
|---|---|---|
|V1.0|2024-03-11|初始版本|

## 功能介绍
默认可以导出3通路*512byte的PCM数据，首先打开小机的数据导出功能，配置需要导出的数据流，连接Auto_test串口接收板（插SD卡），等待数据写入完成后，用读卡器插入电脑，打开rec_tool上位机，将卡扇区数据转成对应的raw格式音频文件。</br>

## 小机软件配置
### 非可视化程序
    对应的board.h定义AUDIO_PCM_DEBUG 则表示打开串口数据导出功能（注意：串口有没有被其他地方占用。）
### 可视化程序

```c
/* 在app_config.h里配置*/
#define TCFG_AUDIO_DATA_EXPORT_DEFINE AUDIO_DATA_EXPORT_VIA_UART
````

### 串口配置
    在uartPcmSender.h配置小机串口TX IO和波特率，波特率默认使用2MHz

### 接口使用

（1）调用顺序</br>
初始化 -> 填数据 -> 写数据</br>

（2）初始化接口</br>
```C
/*
*********************************************************
*                  aec_uart_open
* Description: 打开数据写卡接口
* Arguments  : nch 总通道数，single_size 单个通道的数据大小
* Return     : 0 成功 其他 失败
* Note(s)    : None.
*********************************************************
*/
int aec_uart_open(u8 nch, u16 single_size);
```

(3)关闭接口</br>
```C
/*
*********************************************************
*                  aec_uart_close
* Description: 关闭数据写卡
* Arguments  : None.
* Return     : 0 成功 其他 失败
* Note(s)    : None.
*********************************************************
*/
int aec_uart_close(void);
```

（4）填数接口</br>
```C
/*
*********************************************************
*                  aec_uart_fill
* Description: 填写对应通道的数据
* Arguments  : ch 通道号，buf 数据地址，size 数据大小
* Return     : 0 成功 其他 失败
* Note(s)    : None.
*********************************************************
*/
int aec_uart_fill(u8 ch, void *buf, u16 size);
```

（5）写数接口</br>
```C
/*
*********************************************************
*                  aec_uart_write
* Description: 将写入通话的数据写入串口buffer
* Arguments  : None.
* Return     : None.
* Note(s)    : None.
*********************************************************
*/
void aec_uart_write(void);
```

## 串口接收板使用教程
![](./assets/uart_export/uart_export_0.png) <br>

|	|Microphone选型规格|
|-------|-------|
|绿灯亮 |SD卡在线，同时小屏幕显示sd:online卡在线，同时小屏幕显示sd:online|
|蓝灯亮	|读/写卡异常，需插拔SD卡或重新上电/写卡异常，需插拔SD卡或重新上电|
|PB0    |串口接收板log输出，波特率为1M。可不接，检查小板是否正常工作时才用。log输出，波特率为1M。可不接，检查小板是否正常工作时才用|
|PA4     |串口接收板数据接收口，连接需要导出数据的样机的数据发送IO|
|VMCU|供电口/或者usb供电|

### 显示屏功能
    显示SD卡是否挂载成功、接收到的数据秒数、当前设置可以接收的数据通道数和数据长度，该数值需要和aec_uart_open(u8 nch, u16 single_size)函数的参数保持一致

### 按键功能
软件版本：v20240306<br>
串口接收小板：支持按键修改接收通道数、单通道的数据长度和串口接收波特率，程序默认接收3个通道、单个通道512byte的数据、波特率2000000<br>

修改串口接收波特率：<br>
	单击3次p/p按键进入波特率的修改，可通过NEXT/PREV按键加减接收的波特率，再单击1次p/p按键退出波特率的设置，重启程序后设置生效；<br>

修改接收通道数：<br>
	单击1次p/p按键进入通道数修改，可通过NEXT/PREV按键加减通道数，再单击3次p/p按键退出通道数的设置，重启程序后设置生效；<br>

修改单个通道支持的数据长度：<br>
	单击2次p/p按键进入数据长度的修改，可通过NEXT/PREV按键加减可接收的数据长度，再单击2次p/p按键退出数据长度的设置，重启程序后设置生效；<br>

恢复默认的数据通道数和单通道的数据长度：<br>
	擦除flash后重启；或者长按p/p按键，重启程序后设置生效。<br>


## 卡内扇区数据raw 格式转换
（1）使用winhex查看SD卡的逻辑扇区和物理扇区相差多少<br>
![](./assets/uart_export/uart_export_1.png) <br>

（2）编辑rwsp.bat文件，修整SD物理扇区和逻辑扇区读取的偏移量<br>
![](./assets/uart_export/uart_export_2.png)
![](./assets/uart_export/uart_export_3.png)<br>

    写卡工具是按照物理扇区号50000扇区开始写数据的，而电脑读取工具是按照逻辑扇区号去读取数据的，当SD卡的物理扇区和逻辑扇区号存在偏移的时候，电脑工具再按照逻辑扇区号50000去读数据会导致读到的数据不全，所以需要根据SD卡来修正电脑工具的读取的起始位置。

`注意：同一张SD卡，这个步骤只需要做一次，换SD卡后需要重新修正读取的起始位置`

（3）修改rwsp.bat文件里面的通道数和每通道数据大小,保持和实际写卡的一致<br>
![](./assets/uart_export/uart_export_4.png)<br>

- 参数fac是通道数，要保持和写卡工具显示屏上的ch的大小一致<br>
- 最后一行参数是指定要导出的通道数和每个通道数据大小。<br>

    例如导出3个通道，每个通道512个数据：
    set fac = 3
    unpack.exe q.bin 3  512 512 512

    例如导出4个通道，每个通道360个数据：
    set fac = 4
    unpack.exe q.bin 4  360 360 360 360

（4）双击rwsp.bat批处理程序，按照提示数据要导出的数据的秒数和SD卡的盘符<br>
![](./assets/uart_export/uart_export_5.png)<br>

    双击运行rwsp.bat，弹出命令后，输入秒数后回车，再输入SD卡的盘符后回车，便会再当前目录下生成0.raw、1.raw、2.raw 3个PCM音频文件，可以使用Audition打开

## 使用限制
（1）动态申请发送buf的大小的，受发送端和接收端的内存大小和系统运行速度的限制<br>
（2）默认使用2M的波特率，发送速率大概是181byte/ms<br>
（3）受写卡小板数据写入sd卡的速度限制<br>

## 通话上行数据写卡使用说明
通话上行的数据默认是已经在底层加好了写卡接口的了，不需要再自行添加写卡接口的，只需要配置<br>
#define TCFG_AUDIO_DATA_EXPORT_DEFINE AUDIO_DATA_EXPORT_VIA_UART 便可正常使用写卡功能。<br>

    单麦模式写卡    ch：3 len：512
    beamforing双麦模式写卡  ch：3 len：512 
    话务耳机双麦模式写卡    ch：3 len：512
    hybrid双麦模式写卡  ch：4 len：512
    3mic模式写卡    ch：5 len：512


## 常见问题FAQ
- （1）耳机写卡时打印**uart baudrate limit**
    表示串口写卡跑不过来：
    - a. 检查数据发送的数据是否超过181byte/ms，如果超过建议减少发送的数据，或者同时把耳机和写卡小板的串口波特率都提高
    - b. 如果发送的数据是否超过181byte/ms，可能系统时钟不够，建议提高系统主频

- （2）写卡小班读秒没有动<br>
    写卡正常的时候，写卡小班的pb0是会不停打印每包数据crc pass<br>
    如果没有接收到数据，写卡小班不会有打印出来<br>
    如果接收到错误的数据，写卡小班会打印错误的crc检验码出来<br>
    - a. 如下写卡小板没有任何打印，检查耳机写卡io是否配置正常或者串口是否被占用，更换写卡io
    - b. 如果写卡小班打印错误的crc检验码，检查写卡小板上的ch和len是否二号耳机程序里面的aec_uart_open函数的ch和len是否对应上；
    - c. 如果写卡小班打印错误的crc检验码，如果使用dp或dm写卡，检查是否接了usb受到干扰
    - d. 如果写卡小班打印错误的crc检验码，检查io是否被占用了
